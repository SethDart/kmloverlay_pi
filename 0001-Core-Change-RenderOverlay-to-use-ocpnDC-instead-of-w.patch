From 7ea9e70968a6dce3ad1ff7c89d3db511597da80a Mon Sep 17 00:00:00 2001
From: Jean-Eudes Onfray <je@onfray.fr>
Date: Fri, 24 Feb 2012 14:17:01 +0100
Subject: [PATCH 01/03] Core: Change RenderOverlay to use ocpnDC instead of
 wxDC

  This allow plugins to handle transparency with OpenGL.
  Bump API to 1.7
---
 include/ocpn_plugin.h   |    5 +--
 include/pluginmanager.h |    1 -
 src/pluginmanager.cpp   |   80 ++---------------------------------------------
 3 files changed, 5 insertions(+), 81 deletions(-)

diff --git a/include/ocpn_plugin.h b/include/ocpn_plugin.h
index 0a79437..8034fdf 100644
--- a/include/ocpn_plugin.h
+++ b/include/ocpn_plugin.h
@@ -45,13 +45,14 @@
 
 #include <wx/xml/xml.h>
 #include <wx/glcanvas.h>
+#include "ocpndc.h"
 
 //    This is the most modern API Version number
 //    It is expected that the API will remain downward compatible, meaning that
 //    PlugIns conforming to API Version less then the most modern will also
 //    be correctly supported.
 #define API_VERSION_MAJOR           1
-#define API_VERSION_MINOR           8
+#define API_VERSION_MINOR           7
 
 //    Fwd Definitions
 class       wxFileConfig;
@@ -392,7 +393,7 @@ public:
 
       virtual void ShowPreferencesDialog( wxWindow* parent );
 
-      virtual bool RenderOverlay(wxMemoryDC *pmdc, PlugIn_ViewPort *vp);
+      virtual bool RenderOverlay(ocpnDC &dc, PlugIn_ViewPort *vp);
       virtual void SetCursorLatLon(double lat, double lon);
       virtual void SetCurrentViewPort(PlugIn_ViewPort &vp);
 
diff --git a/include/pluginmanager.h b/include/pluginmanager.h
index 3431d6d..52001d8 100644
--- a/include/pluginmanager.h
+++ b/include/pluginmanager.h
@@ -230,7 +230,6 @@ private:
 
       int               m_plugin_tool_id_next;
       int               m_plugin_menu_item_id_next;
-      wxBitmap          m_cached_overlay_bm;
 
  //     opencpn_plugin    *m_plugin_base;
 
diff --git a/src/pluginmanager.cpp b/src/pluginmanager.cpp
index 3c69b43..cf3e291 100644
--- a/src/pluginmanager.cpp
+++ b/src/pluginmanager.cpp
@@ -538,83 +538,7 @@ bool PlugInManager::RenderAllCanvasOverlayPlugIns( ocpnDC &dc, const ViewPort &v
                   {
                         PlugIn_ViewPort pivp = CreatePlugInViewport( vp );
 
-                        wxDC *pdc = dc.GetDC();
-                        if(pdc)                       // not in OpenGL mode
-                        {
-                              switch(pic->m_api_version)
-                              {
-                                    case 106:
-                                    {
-                                          opencpn_plugin_16 *ppi = dynamic_cast<opencpn_plugin_16 *>(pic->m_pplugin);
-                                          if(ppi)
-                                                ppi->RenderOverlay(*pdc, &pivp);
-                                          break;
-                                    }
-                                    case 107:
-                                    {
-                                          opencpn_plugin_17 *ppi = dynamic_cast<opencpn_plugin_17 *>(pic->m_pplugin);
-                                          if(ppi)
-                                                ppi->RenderOverlay(*pdc, &pivp);
-                                          break;
-                                    }
-
-                                    default:
-                                          break;
-                              }
-                        }
-                        else
-                        {
-                              //    If in OpenGL mode, and the PlugIn has requested OpenGL render callbacks,
-                              //    then there is no need to render by wxDC here.
-                              if(pic->m_cap_flag & WANTS_OPENGL_OVERLAY_CALLBACK)
-                                    return false;
-
-
-                              if((m_cached_overlay_bm.GetWidth() != vp.pix_width) || (m_cached_overlay_bm.GetHeight() != vp.pix_height))
-                                    m_cached_overlay_bm.Create(vp.pix_width, vp.pix_height, -1);
-
-                              wxMemoryDC mdc;
-                              mdc.SelectObject ( m_cached_overlay_bm );
-                              mdc.SetBackground ( *wxBLACK_BRUSH );
-                              mdc.Clear();
-
-
-                              bool b_rendered = false;
-
-                              switch(pic->m_api_version)
-                              {
-                                    case 106:
-                                    {
-                                          opencpn_plugin_16 *ppi = dynamic_cast<opencpn_plugin_16 *>(pic->m_pplugin);
-                                          if(ppi)
-                                                b_rendered = ppi->RenderOverlay(mdc, &pivp);
-                                          break;
-                                    }
-                                    case 107:
-                                    {
-                                          opencpn_plugin_17 *ppi = dynamic_cast<opencpn_plugin_17 *>(pic->m_pplugin);
-                                          if(ppi)
-                                                b_rendered = ppi->RenderOverlay(mdc, &pivp);
-                                          break;
-                                    }
-
-                                    default:
-                                    {
-                                          b_rendered = pic->m_pplugin->RenderOverlay(&mdc, &pivp);
-                                          break;
-                                    }
-                              }
-
-                              mdc.SelectObject(wxNullBitmap);
-
-                              if(b_rendered)
-                              {
-                                    wxMask *p_msk = new wxMask(m_cached_overlay_bm, wxColour(0,0,0));
-                                    m_cached_overlay_bm.SetMask(p_msk);
-
-                                    dc.DrawBitmap(m_cached_overlay_bm, 0, 0, true);
-                              }
-                        }
+                        pic->m_pplugin->RenderOverlay(dc, &pivp);
                   }
                   else if(pic->m_cap_flag & WANTS_OPENGL_OVERLAY_CALLBACK)
                   {
@@ -1485,7 +1409,7 @@ void opencpn_plugin::OnToolbarToolCallback(int id)
 void opencpn_plugin::OnContextMenuItemCallback(int id)
 {}
 
-bool opencpn_plugin::RenderOverlay(wxMemoryDC *dc, PlugIn_ViewPort *vp)
+bool opencpn_plugin::RenderOverlay(ocpnDC &dc, PlugIn_ViewPort *vp)
 {  return false; }
 
 void opencpn_plugin::SetCursorLatLon(double lat, double lon)
-- 
1.7.10.2

